on: [push, pull_request]

env:
  PUBLISH_OS: ubuntu-latest
  PUBLISH_JAVA_VERSION: 1.8
  PUBLISH_BRANCH: refs/heads/master

jobs: 
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        java-version: [1.8, 11]
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.os == 'windows-latest' }}

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --tags --unshallow

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}

      - run: ./millw -i -j 0 __.testCached

      - run: ./millw -i -j 0 __.publishLocal $(pwd)/testRepo

      - name: Setup GPG secrets for publish
        if: matrix.os == env.PUBLISH_OS && matrix.java-version == env.PUBLISH_JAVA_VERSION && github.ref == env.PUBLISH_BRANCH && github.event_name == 'push'
        run: |
          gpg --version
          cat <(echo "${{ secrets.GPG_SECRET_KEY }}") | base64 --decode | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Publish to Maven Central
        if: matrix.os == env.PUBLISH_OS && matrix.java-version == env.PUBLISH_JAVA_VERSION && github.ref == env.PUBLISH_BRANCH && github.event_name == 'push'
        run: ./millw -i mill.scalalib.PublishModule/publishAll --sonatypeCreds "${{ secrets.SONATYPE_CREDS }}" --gpgArgs "--passphrase=${{ secrets.GPG_SECRET_KEY_PASS }},--batch,--yes,-a,-b,--pinentry-mode,loopback" --publishArtifacts __.publishArtifacts --readTimeout 600000 --release true --signed true

      - run: ./millw -j 0 __.scoverage.xmlReport

      - name: Upload scoverage reports to codecov.io
        uses: codecov/codecov-action@v1
        with:
          file: ./out/*/scoverage/xmlReport/dest/scoverage.xml
